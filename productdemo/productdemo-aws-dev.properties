#server.port=9876
#spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgresql
spring.jpa.show-sql=true
spring.database.driverClassName=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/eagle_eye_local
#spring.datasource.url=jdbc:postgresql://database:5432/postgres
spring.datasource.url=jdbc:postgresql://postgres.cpkd1tifgbau.us-east-2.rds.amazonaws.com:5432/postgres
#spring.datasource.url: "jdbc:postgresql://eagle-eye-aws-dev.c5q3imcw6rqh.ap-south-1.rds.amazonaws.com:5432/eagle_eye_aws_dev"
#spring.datasource.username=postgres_dev
#spring.datasource.password=p0stgr@s_dev

spring.datasource.username=postgres
#spring.datasource.password=password
spring.datasource.password=Hello123

#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=none
spring.datasource.continue-on-error=true
spring.jpa.generate-ddl=false
# control the sql db initialization (from schema.sql and data.sql)

spring.datasource.initialization-mode=always
example.property=YesItWorkedFromGit
